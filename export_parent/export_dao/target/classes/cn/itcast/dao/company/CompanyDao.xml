<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.itcast.dao.company.CompanyDao" >

    <resultMap id="BaseResultMap" type="company">
        <result column="expiration_date" property="expirationDate"/>
        <result column="license_id" property="licenseId"/>
        <result column="company_size" property="companySize"/>
    </resultMap>

    <select id="findAll"  resultMap="BaseResultMap" >
        select * from ss_company
    </select>

    <insert id="insert" parameterType="company">
        insert into ss_company
        (
            id,
            name,
            expiration_date,
            address,
            license_id,
            representative,
            phone,
            company_size,
            industry,
            remarks,
            state,
            balance,
            city
        ) values(
            #{id},
            #{name},
            #{expirationDate},
            #{address},
            #{licenseId},
            #{representative},
            #{phone},
            #{companySize},
            #{industry},
            #{remarks},
            #{state},
            #{balance},
            #{city}
        )
    </insert>

    <select id="selectByPrimaryKey" parameterType="string" resultMap="BaseResultMap">
        select * from ss_company where id=#{id}
    </select>

    <update id="updateByPrimaryKey" parameterType="company">
        update ss_company
       <set>
          <if test="name!=null and name!=''">
            name=#{name},
          </if>
          <if test="expirationDate!=null">
            expiration_date=#{expirationDate},
          </if>
        <if test="address!=null and address!=''">
            address=#{address},
          </if>
        <if test="licenseId!=null and licenseId!=''">
            license_id=#{licenseId},
          </if>
        <if test="representative!=null and representative!=''">
            representative=#{representative},
          </if>
        <if test="phone!=null and phone!=''">
            phone=#{phone},
          </if>
         <if test="companySize!=null and companySize!=''">
            company_size=#{companySize},
          </if>
         <if test="industry!=null and industry!=''">
            industry=#{industry},
          </if>
         <if test="remarks!=null and remarks!=''">
            remarks=#{remarks},
          </if>
        <if test="state!=null and state!=''">
            state=#{state},
          </if>
         <if test="balance!=null and balance!=''">
            balance=#{balance},
          </if>
         <if test="city!=null and city!=''">
            city=#{city},
          </if>
       </set>
            where id=#{id}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="string">
        delete from ss_company where id=#{id}
    </delete>

    <select id="findCount" resultType="long" >
         select count(id) from ss_company
    </select>
<!--    List<Company> findPage(@Param("start") int start, @Param("size")int size);-->
    <select id="findPage"  resultMap="BaseResultMap"  parameterType="map">
        select * from ss_company limit #{start},#{size}
    </select>


</mapper>